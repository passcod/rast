var searchIndex = {};
searchIndex['memstream'] = {"items":[[0,"","memstream","Like a [`MemWriter`] and [`MemReader`], but both\nat the same time. It is backed by a `Deque<u8>`."],[1,"DListStream","","An implementation of `MemStream` using `DList`."],[11,"que","","",0],[11,"mode","","",0],[1,"RingBufStream","","An implementation of `MemStream` using `RingBuf`."],[11,"que","","",1],[11,"mode","","",1],[2,"Mode","","The possible modes a `MemStream` can use."],[12,"Fifo","","",2],[12,"Filo","","",2],[6,"MemStream","","A trait for in-memory, `Deque<u8>`-backed streams."],[10,"new","","Creates a new `MemStream` in `Fifo` mode.",3],[9,"with_mode","","Creates a new `MemStream` in either `Fifo` (\"first\nin first out\", the intuitive and default behaviour)\nor `Filo` (\"first in last out\") mode.",3],[9,"get_ref","","Acquires an immutable reference to the underlying `Deque`.",3],[9,"unwrap","","Unwraps this `MemStream`, returning the underlying `Deque`.",3],[9,"queue","","Acquires a mutable reference to the underlying `Deque`.",3],[9,"mode","","Acquires an immutable reference to the `Mode` of\nthis `MemStream`.",3],[10,"_read","","Implements the `read` method for the `Reader` trait.\nSee the code sample in the trait description for\nimplementation details.",3],[10,"_write","","Implements the `write` method for the `Writer` trait.\nSee the code sample in the trait description for\nimplementation details.",3],[10,"with_mode","","",0],[10,"get_ref","","",0],[10,"unwrap","","",0],[10,"queue","","",0],[10,"mode","","",0],[10,"write","","",0],[10,"read","","",0],[10,"with_mode","","",1],[10,"get_ref","","",1],[10,"unwrap","","",1],[10,"queue","","",1],[10,"mode","","",1],[10,"write","","",1],[10,"read","","",1]],"paths":[[1,"DListStream"],[1,"RingBufStream"],[2,"Mode"],[6,"MemStream"]]};
searchIndex['rast'] = {"items":[[0,"","rast","# Rast - A Rust Webserver Interface"],[1,"Environment","","Describes the environment of an HTTP request."],[11,"url","","",0],[11,"raw_url","","",0],[11,"request_method","","",0],[11,"content_length","","",0],[0,"memstream","","Like a [`MemWriter`] and [`MemReader`], but both\nat the same time. It is backed by a `Deque<u8>`."],[1,"DListStream","rast::memstream","An implementation of `MemStream` using `DList`."],[11,"que","","",1],[11,"mode","","",1],[1,"RingBufStream","","An implementation of `MemStream` using `RingBuf`."],[11,"que","","",2],[11,"mode","","",2],[2,"Mode","","The possible modes a `MemStream` can use."],[12,"Fifo","","",3],[12,"Filo","","",3],[6,"MemStream","","A trait for in-memory, `Deque<u8>`-backed streams."],[10,"new","","Creates a new `MemStream` in `Fifo` mode.",4],[9,"with_mode","","Creates a new `MemStream` in either `Fifo` (\"first\nin first out\", the intuitive and default behaviour)\nor `Filo` (\"first in last out\") mode.",4],[9,"get_ref","","Acquires an immutable reference to the underlying `Deque`.",4],[9,"unwrap","","Unwraps this `MemStream`, returning the underlying `Deque`.",4],[9,"queue","","Acquires a mutable reference to the underlying `Deque`.",4],[9,"mode","","Acquires an immutable reference to the `Mode` of\nthis `MemStream`.",4],[10,"_read","","Implements the `read` method for the `Reader` trait.\nSee the code sample in the trait description for\nimplementation details.",4],[10,"_write","","Implements the `write` method for the `Writer` trait.\nSee the code sample in the trait description for\nimplementation details.",4],[10,"with_mode","","",1],[10,"get_ref","","",1],[10,"unwrap","","",1],[10,"queue","","",1],[10,"mode","","",1],[10,"write","","",1],[10,"read","","",1],[10,"with_mode","","",2],[10,"get_ref","","",2],[10,"unwrap","","",2],[10,"queue","","",2],[10,"mode","","",2],[10,"write","","",2],[10,"read","","",2],[0,"http","rast","The `rast::http` mod contains types used by HTTP"],[1,"StatusCode","rast::http",""],[1,"Port","",""],[2,"Method","",""],[12,"Connect","","",5],[12,"Delete","","",5],[12,"Get","","",5],[12,"Head","","",5],[12,"Options","","",5],[12,"Patch","","",5],[12,"Post","","",5],[12,"Put","","",5],[12,"Trace","","",5],[2,"Scheme","",""],[12,"Http","","",6],[12,"Https","","",6],[10,"from_i64","","",5],[10,"from_u64","","",5],[6,"Handler","rast","`Handler` is the trait web servers must implement."],[9,"run","","",7],[6,"App","","`App` is the trait web applications must implement,\nas well as what web servers must handle."],[9,"call","","",8]],"paths":[[1,"Environment"],[1,"DListStream"],[1,"RingBufStream"],[2,"Mode"],[6,"MemStream"],[2,"Method"],[2,"Scheme"],[6,"Handler"],[6,"App"]]};

initSearch(searchIndex);
